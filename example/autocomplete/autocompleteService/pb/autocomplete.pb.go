// Code generated by protoc-gen-go. DO NOT EDIT.
// source: autocomplete.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	autocomplete.proto

It has these top-level messages:
	AutocompleteRequest
	SuggestionResponse
	PopularResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// autocomplete request
type AutocompleteRequest struct {
	Keyword string `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
}

func (m *AutocompleteRequest) Reset()                    { *m = AutocompleteRequest{} }
func (m *AutocompleteRequest) String() string            { return proto.CompactTextString(m) }
func (*AutocompleteRequest) ProtoMessage()               {}
func (*AutocompleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AutocompleteRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

// suggestion response
type SuggestionResponse struct {
	Suggestions []string `protobuf:"bytes,1,rep,name=suggestions" json:"suggestions,omitempty"`
	TookTime    int32    `protobuf:"varint,2,opt,name=tookTime" json:"tookTime,omitempty"`
}

func (m *SuggestionResponse) Reset()                    { *m = SuggestionResponse{} }
func (m *SuggestionResponse) String() string            { return proto.CompactTextString(m) }
func (*SuggestionResponse) ProtoMessage()               {}
func (*SuggestionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SuggestionResponse) GetSuggestions() []string {
	if m != nil {
		return m.Suggestions
	}
	return nil
}

func (m *SuggestionResponse) GetTookTime() int32 {
	if m != nil {
		return m.TookTime
	}
	return 0
}

// popular response
type PopularResponse struct {
	Popular  []string `protobuf:"bytes,1,rep,name=popular" json:"popular,omitempty"`
	TookTime int32    `protobuf:"varint,2,opt,name=tookTime" json:"tookTime,omitempty"`
}

func (m *PopularResponse) Reset()                    { *m = PopularResponse{} }
func (m *PopularResponse) String() string            { return proto.CompactTextString(m) }
func (*PopularResponse) ProtoMessage()               {}
func (*PopularResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PopularResponse) GetPopular() []string {
	if m != nil {
		return m.Popular
	}
	return nil
}

func (m *PopularResponse) GetTookTime() int32 {
	if m != nil {
		return m.TookTime
	}
	return 0
}

func init() {
	proto.RegisterType((*AutocompleteRequest)(nil), "pb.autocompleteRequest")
	proto.RegisterType((*SuggestionResponse)(nil), "pb.suggestionResponse")
	proto.RegisterType((*PopularResponse)(nil), "pb.popularResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Autocomplete service

type AutocompleteClient interface {
	// returns suggestion from given keyword
	GetSuggestion(ctx context.Context, in *AutocompleteRequest, opts ...grpc.CallOption) (*SuggestionResponse, error)
	// returns popular keyword
	GetPopular(ctx context.Context, in *AutocompleteRequest, opts ...grpc.CallOption) (*PopularResponse, error)
}

type autocompleteClient struct {
	cc *grpc.ClientConn
}

func NewAutocompleteClient(cc *grpc.ClientConn) AutocompleteClient {
	return &autocompleteClient{cc}
}

func (c *autocompleteClient) GetSuggestion(ctx context.Context, in *AutocompleteRequest, opts ...grpc.CallOption) (*SuggestionResponse, error) {
	out := new(SuggestionResponse)
	err := grpc.Invoke(ctx, "/pb.autocomplete/getSuggestion", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *autocompleteClient) GetPopular(ctx context.Context, in *AutocompleteRequest, opts ...grpc.CallOption) (*PopularResponse, error) {
	out := new(PopularResponse)
	err := grpc.Invoke(ctx, "/pb.autocomplete/getPopular", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Autocomplete service

type AutocompleteServer interface {
	// returns suggestion from given keyword
	GetSuggestion(context.Context, *AutocompleteRequest) (*SuggestionResponse, error)
	// returns popular keyword
	GetPopular(context.Context, *AutocompleteRequest) (*PopularResponse, error)
}

func RegisterAutocompleteServer(s *grpc.Server, srv AutocompleteServer) {
	s.RegisterService(&_Autocomplete_serviceDesc, srv)
}

func _Autocomplete_GetSuggestion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutocompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutocompleteServer).GetSuggestion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.autocomplete/GetSuggestion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutocompleteServer).GetSuggestion(ctx, req.(*AutocompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Autocomplete_GetPopular_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AutocompleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AutocompleteServer).GetPopular(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.autocomplete/GetPopular",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AutocompleteServer).GetPopular(ctx, req.(*AutocompleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Autocomplete_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.autocomplete",
	HandlerType: (*AutocompleteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getSuggestion",
			Handler:    _Autocomplete_GetSuggestion_Handler,
		},
		{
			MethodName: "getPopular",
			Handler:    _Autocomplete_GetPopular_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "autocomplete.proto",
}

func init() { proto.RegisterFile("autocomplete.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 221 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x86, 0x37, 0x2b, 0xba, 0xee, 0xa8, 0x08, 0xb3, 0xa0, 0x61, 0x4f, 0x21, 0xa7, 0x9e, 0x2a,
	0xe8, 0xd5, 0x93, 0x17, 0xaf, 0x12, 0xfd, 0x03, 0x5b, 0x1d, 0x42, 0xe9, 0xc7, 0xc4, 0x66, 0x82,
	0xf8, 0x2f, 0xfc, 0xc9, 0x52, 0x69, 0x6b, 0xf1, 0x63, 0x8f, 0xef, 0xfb, 0xc2, 0x93, 0x3c, 0x03,
	0xb8, 0x4b, 0xc2, 0xcf, 0xdc, 0x84, 0x9a, 0x84, 0xf2, 0xd0, 0xb1, 0x30, 0x2e, 0x43, 0x61, 0xaf,
	0x60, 0x33, 0x5f, 0x1c, 0xbd, 0x26, 0x8a, 0x82, 0x1a, 0x56, 0x15, 0xbd, 0xbf, 0x71, 0xf7, 0xa2,
	0x95, 0x51, 0xd9, 0xda, 0x8d, 0xd1, 0x3a, 0xc0, 0x98, 0xbc, 0xa7, 0x28, 0x25, 0xb7, 0x8e, 0x62,
	0xe0, 0x36, 0x12, 0x1a, 0x38, 0xf9, 0x6e, 0xa3, 0x56, 0xe6, 0x20, 0x5b, 0xbb, 0x79, 0x85, 0x5b,
	0x38, 0x16, 0xe6, 0xea, 0xa9, 0x6c, 0x48, 0x2f, 0x8d, 0xca, 0x0e, 0xdd, 0x94, 0xed, 0x3d, 0x9c,
	0x07, 0x0e, 0xa9, 0xde, 0x75, 0x13, 0x50, 0xc3, 0x6a, 0xa8, 0x06, 0xd8, 0x18, 0xf7, 0x81, 0xae,
	0x3f, 0x14, 0x9c, 0xce, 0x75, 0xf0, 0x0e, 0xce, 0x3c, 0xc9, 0xe3, 0xf4, 0x0f, 0xbc, 0xcc, 0x43,
	0x91, 0xff, 0x61, 0xbc, 0xbd, 0xe8, 0x87, 0xdf, 0x66, 0x76, 0x81, 0xb7, 0x00, 0x9e, 0xe4, 0x61,
	0x78, 0xfe, 0x5f, 0xc0, 0xa6, 0x1f, 0x7e, 0x68, 0xd8, 0x45, 0x71, 0xf4, 0x75, 0xeb, 0x9b, 0xcf,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xb1, 0xa0, 0x51, 0x1e, 0x81, 0x01, 0x00, 0x00,
}
